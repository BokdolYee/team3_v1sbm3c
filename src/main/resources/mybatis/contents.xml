<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="dev.mvc.contents.ContentsDAOInter">
  <!-- 등록한 레코드 갯수 1 리턴, #{memberno}: public int getAdminno() 호출됨 -->
  <insert id="create" parameterType="dev.mvc.contents.ContentsVO">
    INSERT INTO contents (contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, newscateno)
    VALUES (contents_seq.nextval, #{title}, #{passwd}, sysdate, #{cnt}, #{all_cnt}, #{visible}, #{stockno}, #{newsno}, #{newscateno})
  </insert>


  <!-- 모든 카테고리의 등록된 글목록 -->
  <select id="list_all" resultType="dev.mvc.contents.ContentsVO">
    SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, newscateno
    FROM contents
    ORDER BY contentno DESC
  </select>
  
  <!-- 특정 카테고리의 등록된 글목록 -->
  <select id="list_by_cateno" resultType="dev.mvc.contents.ContentsVO" parameterType="int">
    SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, newscateno
    FROM contents 
    WHERE newscateno = #{newscateno}
    ORDER BY contentno DESC
  </select> 
  
  <!-- 일반적인 조회 -->
  <select id="read" resultType="dev.mvc.contents.ContentsVO" parameterType="int">
    SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, newscateno
    FROM contents
    WHERE contentno = #{contentno}
  </select>

  <!-- 카테고리별 검색 목록 -->
  <select id="list_by_cateno_search" resultType="dev.mvc.contents.ContentsVO" parameterType="HashMap">
    SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, newscateno
    FROM contents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE newscateno=#{newscateno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE newcateno=#{newcateno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
    ORDER BY contentno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="list_by_cateno_search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM contents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE newscateno=#{newscateno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE newscateno=#{newscateno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                  OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
      </otherwise>
    </choose>
  </select>   

  <!-- 카테고리별 검색 + 페이징 목록 -->
  <select id="list_by_cateno_search_paging" resultType="dev.mvc.contents.ContentsVO" parameterType="HashMap">
   SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, r
   FROM (
              SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno, rownum as r
              FROM (
                        SELECT contentno, title, passwd, rdate, cnt, all_cnt, visible, stockno, newsno
                        FROM contents
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                            WHERE newscateno=#{newscateno}
                          </when>
                          <otherwise>
                            WHERE newscateno=#{newscateno} AND (UPPER(title) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(content) LIKE '%' || UPPER(#{word}) || '%' 
                                                              OR UPPER(word) LIKE '%' || UPPER(#{word}) || '%')
                          </otherwise>
                        </choose>
                        ORDER BY contentno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!-- 1 page: WHERE r >= 1 AND r <= 10; 
          2 page: WHERE r >= 11 AND r <= 20;
          3 page: WHERE r >= 21 AND r <= 30; -->
  </select>
  
  <!-- 패스워드 검사 -->
  <select id="password_check" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt 
    FROM contents
    WHERE contentno = #{contentno} AND passwd=#{passwd}
  </select>
  
  <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET title=#{title}
    WHERE contentno = #{contentno}
  </update>


  <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE contentno = #{contentno}
  </update>  

  <!-- 글 삭제 -->
  <delete id="delete" parameterType="int">
    DELETE FROM contents
    WHERE contentno=#{contentno}
  </delete>
  
  <!-- FK newcateno 컬럼에 대응하는 필수 SQL -->
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 -->
  <select id="count_by_cateno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM contents 
    WHERE newscateno=#{newscateno}
  </select>
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_cateno" parameterType="int">
    DELETE FROM contents
    WHERE newscateno=#{newscateno}
  </delete>

  <!-- FK memberno 컬럼에 대응하는 필수 SQL -->
  <!-- 특정 카테고리에 속한 레코드 갯수를 리턴 -->
  <select id="count_by_memberno" resultType="int" parameterType="int">
    SELECT COUNT(*) as cnt 
    FROM contents 
    WHERE memberno=#{memberno}
  </select>
  
  <!-- 특정 카테고리에 속한 모든 레코드 삭제 -->
  <delete id="delete_by_memberno" parameterType="int">
    DELETE FROM contents
    WHERE memberno=#{memberno}
  </delete>

   <!-- 댓글 수 증가 -->
   <update id="increaseReplycnt" parameterType="int">
     UPDATE contents
     SET replycnt = replycnt + 1
     WHERE contentno = #{contentno}
   </update>

   <!-- 댓글 수 감소 -->
   <update id="decreaseReplycnt" parameterType="int">
     UPDATE contents
     SET replycnt = replycnt - 1
     WHERE contentno = #{contentno}
   </update>
   
    <update id="updateCntCount" parameterType="dev.mvc.contents.ContentsVO">
        UPDATE newscate 
        SET cnt = (SELECT COUNT(*) FROM contents WHERE newscateno = #{newscateno})
        WHERE newscateno = #{newscateno}
    </update>
    
    <update id="resetCnt" parameterType="dev.mvc.contents.ContentsVO">
      UPDATE newscate
      SET cnt = 0
      WHERE genre = (
          SELECT genre
          FROM newscate
          WHERE newscateno = #{newscateno}
      ) AND name = '--'
    </update>

    <update id="updateCnt" parameterType="dev.mvc.contents.ContentsVO">
      UPDATE newscate
      SET cnt = (
          SELECT SUM(cnt)
          FROM newscate
          WHERE genre = (
              SELECT genre
              FROM newscate
              WHERE newscateno = #{newscateno}
          )
      )
      WHERE genre = (
          SELECT genre
          FROM newscate
          WHERE newscateno = #{newscateno}
      ) AND name = '--'
  </update>
</mapper> 

